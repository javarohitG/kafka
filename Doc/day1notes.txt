Messaging is meant for asynchronous communication.

Sender------------------------------>MOM--------------------------->Receiver
		            (Kafka)	


MOM-------------Message Oriented Middleware


Two types of messaging:

1.Point to Point (1 to 1)
2.Publish and Subscribe(1 to many)



Point to Point 

Sender--------------------------->Queue-------------------------->Receiver


Publish and Subscribe

				     |-------------------->Receiver 1
Sender----------------------------->Topic--------------|-------------------->Receiver 2
				     |-------------------->Receiver 3

Queue and Topic are collectively called Messaging Destinations.


JMS-----------------Specification for writing messaging applications in Java.

JMS--------------Java Messaging Service


Vendors who implement JMS:

IBM MQ
Apache Active MQ
Rabbit MQ
Tibco Rendezvous

In JMS products, the same topic  is replicated in all the nodes of the cluster.

Kafka follows a Distributed Messaging Architecture. In kafka, a single  topic spans across all the nodes of the cluster.
Kafka does not follow JMS specification.
A topic is divided into multiple partitions. Each partition holds a collection of related messages.
A single partition is replicated across multiple nodes based on the replication factor.

Replication Factor--------------In how many nodes , a partition is replicated.

For example, assume that a topic has 4 partitions(0,1,2 and 3)  and the replication factor is 3.
Assume that there are 5 nodes in the cluster.



Node 1-------------------0,1

Node 2-------------------2,3,0

Node 3------------------1,2

Node 4------------------3,0

Node 5------------------1,2,3


Assume that a topic has 4 partitions(0,1,2 and 3)  and the replication factor is 2.
Assume that there are 5 nodes in the cluster.


Node 1-------------------0,1

Node 2-------------------2,3

Node 3------------------0

Node 4------------------1,2

Node 5------------------3

Each of this node is also called a broker.

A broker runs a JVM(A kafka instance).


Kafka guarantees that  the same partition is not replicated in the same node.

A message is the fundamental unit of data in kafka.

Each message is called a log.

As the messages are delivered to the consumer, they are committed.
Committed messages will not be redelivered to the consumer.

Data Ingest------------------------importing data from external data sources into a storage medium.



Very easy to develop ETL pipelines using Kafka.

	Extract				                 Transform					Load			
RDBMS---------------------->Kafka Topic 1--------------------------->Streaming Application------------------->Kafka Topic 2---------------------->Nosql
(Mysql)												(Cassandra)

Kafka supports only publish and subscribe,
It does not support point to point.





Kafka topic can't understand any format other than byte array. 

All the messages available in the topic are in the form of byte[].

	Serializer			Deserializer
Object------------------------------->byte[]------------------------------>Object
(Producer)				    (Consumer)

	
Kafka is not suitable for few messages of larger size.

Kafka is more suitable for large volume of messages of smaller size.

Kafka is developed in Java and Scala.

Scala is a functional programming language whose byte code runs on top of the JVM.

JVM---------------Java Virtual Machine-------------Responsible for converting java byte code into runtime instructions.

JRE-------Java Runtime Environment-------------------------JVM+System Libraries



Kafka Setup and Verification:

1. Download jdk 1.8 /jre 1.8 from https://www.oracle.com/in/java/technologies/javase/javase-jdk8-downloads.html#license-lightbox and install it.
2. set the JAVA_HOME environment variable.
3. Download Apache Kafka from https://archive.apache.org/dist/kafka/2.5.0/kafka_2.12-2.5.0.tgz and extract it to c:\

kafka_2.12-2.5.0.tgz-------------The scala version used to develop kafka is 2.12 and the kafka version is 2.5.0.

Under kafka there are 4 subdirectories.

bin----------------binary scripts for starting,configuring and stopping the kafka server (unix flavour).
       bin\windows---------------binary scripts for windows platform.
libs---------------contains the java and scala libraries in the form of jar files.

Jar files contain collection of .class files.


config-------------contains the configuration files--------Mostly the configuration files are in the form of .properties files.

site-docs-----------contains the documentation.

4. start the zookeeper.

Zookeeper is a service used Kafka to maintain its meta data.
open a new command command window, navigate to c:\/kafka_2.12-2.5.0 and execute the following command.

bin\windows\zookeeper-server-start.bat config\zookeeper.properties











